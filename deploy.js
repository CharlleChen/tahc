const { Conflux } = require("js-conflux-sdk");

(async function () {
    const cfx = await Conflux.create({ url: "https://test.confluxrpc.com" })
    const account = cfx.wallet.addPrivateKey("0x89234C9E3D7C3E3EB1E18A2B8F0C1C1FE89A7BE67CF8F82759EE47A1F66DAC96")

    // your bytecode
    let bytecode = "0x608060405234801561001057600080fd5b5061094d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063131a0680146100465780631f1bd692146100625780632e64cec114610080575b600080fd5b610060600480360381019061005b91906105d2565b61009e565b005b61006a61039f565b6040516100779190610654565b60405180910390f35b61008861042d565b6040516100959190610654565b60405180910390f35b60008080546100ac9061078a565b80601f01602080910402602001604051908101604052809291908181526020018280546100d89061078a565b80156101255780601f106100fa57610100808354040283529160200191610125565b820191906000526020600020905b81548152906001019060200180831161010857829003601f168201915b5050505050905060006040518060400160405280600381526020017f0a090a000000000000000000000000000000000000000000000000000000000081525090506000839050600081518351855161017d91906106e8565b61018791906106e8565b67ffffffffffffffff8111156101a05761019f6108c3565b5b6040519080825280601f01601f1916602001820160405280156101d25781602001600182028036833780820191505090505b50905060008190506000805b8651811015610266578681815181106101fa576101f9610894565b5b602001015160f81c60f81b838380610211906107ed565b94508151811061022457610223610894565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061025e906107ed565b9150506101de565b5060005b85518110156102f25785818151811061028657610285610894565b5b602001015160f81c60f81b83838061029d906107ed565b9450815181106102b0576102af610894565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806102ea906107ed565b91505061026a565b5060005b845181101561037e5784818151811061031257610311610894565b5b602001015160f81c60f81b838380610329906107ed565b94508151811061033c5761033b610894565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610376906107ed565b9150506102f6565b5081600090805190602001906103959291906104bf565b5050505050505050565b600080546103ac9061078a565b80601f01602080910402602001604051908101604052809291908181526020018280546103d89061078a565b80156104255780601f106103fa57610100808354040283529160200191610425565b820191906000526020600020905b81548152906001019060200180831161040857829003601f168201915b505050505081565b60606000805461043c9061078a565b80601f01602080910402602001604051908101604052809291908181526020018280546104689061078a565b80156104b55780601f1061048a576101008083540402835291602001916104b5565b820191906000526020600020905b81548152906001019060200180831161049857829003601f168201915b5050505050905090565b8280546104cb9061078a565b90600052602060002090601f0160209004810192826104ed5760008555610534565b82601f1061050657805160ff1916838001178555610534565b82800160010185558215610534579182015b82811115610533578251825591602001919060010190610518565b5b5090506105419190610545565b5090565b5b8082111561055e576000816000905550600101610546565b5090565b60006105756105708461069b565b610676565b905082815260208101848484011115610591576105906108f7565b5b61059c848285610748565b509392505050565b600082601f8301126105b9576105b86108f2565b5b81356105c9848260208601610562565b91505092915050565b6000602082840312156105e8576105e7610901565b5b600082013567ffffffffffffffff811115610606576106056108fc565b5b610612848285016105a4565b91505092915050565b6000610626826106cc565b61063081856106d7565b9350610640818560208601610757565b61064981610906565b840191505092915050565b6000602082019050818103600083015261066e818461061b565b905092915050565b6000610680610691565b905061068c82826107bc565b919050565b6000604051905090565b600067ffffffffffffffff8211156106b6576106b56108c3565b5b6106bf82610906565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006106f38261073e565b91506106fe8361073e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561073357610732610836565b5b828201905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561077557808201518184015260208101905061075a565b83811115610784576000848401525b50505050565b600060028204905060018216806107a257607f821691505b602082108114156107b6576107b5610865565b5b50919050565b6107c582610906565b810181811067ffffffffffffffff821117156107e4576107e36108c3565b5b80604052505050565b60006107f88261073e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561082b5761082a610836565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea26469706673582212204a40860fe9d6b8a7ce2424c64fb51511373acee4956e16faaf4ac3252f8d5c9864736f6c63430008060033"

    let deployReceipt = await cfx.sendTransaction({
        from: account.address,
        data: bytecode
    }).executed()

    // or use contract instance
    // let vendingMachine = cfx.Contract({ bytecode })
    // let deployReceipt = await vendingMachine.constructor().sendTransaction({from:account.address}).executed()

    console.log("deploy tx receipt:", deployReceipt)
})()

